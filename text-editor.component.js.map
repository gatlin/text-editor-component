{"version":3,"file":"text-editor.component.js","sourceRoot":"","sources":["src/text-editor.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\n@customElement(\"text-editor\")\nclass TextEditorComponent extends LitElement {\n  @property()\n  public id = \"\";\n\n  @property()\n  public value = \"\";\n\n  /**\n   * @remarks\n   * The `<code>` tag **must** begin on the same line as the closing `>` in\n   * `<pre>`. Otherwise the newline is interpreted literally and causes the\n   * text not to line up correctly.\n   */\n  render() {\n    const lines = this.value.split(\"\\n\\n\");\n    return html`\n      <div\n        class=\"text-editor-wrap\"\n        id=\"${this.id}\"\n        @input=${(e: Event): void => {\n          this.value = (e.target as HTMLInputElement).value;\n        }}\n      >\n        <textarea\n          class=\"plain\"\n          spellcheck=\"false\"\n          .value=${this.value}\n          @scroll=${this.syncScroll}\n          @input=${this.syncScroll}\n        ></textarea>\n        <pre\n          class=\"fancy\"\n          aria-hidden=\"true\"\n        ><code class=\"fancy-content\">${lines\n          .map((p) => p.split(\"\\n\").map((line) => html`<span>${line} </span>`))\n          .map(\n            (p, i) =>\n              html`${p}${i < lines.length - 1\n                ? html`<span>&nbsp;</span>`\n                : null}`\n          )}\n          </code>\n        </pre>\n        <slot class=\"editorslot\" @slotchange=${this.initFromSlotText}></slot>\n      </div>\n    `;\n  }\n\n  updated() {\n    const slot = this.renderRoot.querySelector(\"slot\");\n    if (null !== slot) {\n      slot.textContent = this.value;\n    }\n  }\n\n  /**\n   * Ensures the textarea and `<pre>` tag are scrolled the same amount along\n   * both axes.\n   */\n  protected syncScroll(e: Event): void {\n    const plain = e.target as HTMLElement;\n    const fancy = this.renderRoot.querySelector(\".fancy\");\n    if (null === fancy) {\n      return;\n    }\n    fancy.scrollTop = plain.scrollTop;\n    fancy.scrollLeft = plain.scrollLeft;\n  }\n\n  /**\n   * Captures any child text content that may exist in the literal markup.\n   */\n  protected initFromSlotText(): void {\n    const slot = this.renderRoot.querySelector(\"slot\");\n    if (null === slot) {\n      return;\n    }\n    const textContents = slot.assignedNodes({\n      flatten: true\n    });\n    if (null === textContents || 0 === textContents.length) {\n      return;\n    }\n    const text = textContents[0];\n    if (\"string\" === typeof text.textContent) {\n      this.value = text.textContent.trim();\n    }\n  }\n\n  static styles = css`\n    :host {\n      background-color: inherit;\n      height: 100%;\n      width: 100%;\n      display: flex;\n      flex-direction: column;\n      color: transparent;\n      padding: 1rem;\n    }\n\n    @media screen and (min-device-width: 800px) {\n      .text-editor-wrap {\n        flex: 3;\n      }\n    }\n\n    .text-editor-wrap {\n      display: block;\n      box-sizing: border-box;\n      flex: 2;\n      position: relative;\n      width: 100%;\n      height: 100%;\n      margin: 0;\n      padding: 0rem;\n      background-color: inherit;\n      border-radius: 4px;\n    }\n\n    .plain,\n    .fancy {\n      box-sizing: border-box;\n      margin: 0rem;\n      border-top: 1rem;\n      border-bottom: 1rem;\n      border-right: 1rem;\n      border-left: 1rem;\n      padding: 0;\n      position: absolute;\n      top: 0rem;\n      left: 0rem;\n      height: 100%;\n      width: 100%;\n      overflow: auto;\n      white-space: pre-wrap;\n    }\n\n    .plain,\n    .fancy,\n    .fancy * {\n      font-size: inherit;\n      font-family: inherit, monospace;\n      line-height: inherit;\n    }\n\n    textarea.plain {\n      z-index: 1;\n      background: transparent;\n      outline: none;\n      color: transparent;\n      caret-color: white;\n      resize: none;\n      scrollbar-color: transparent;\n      scrollbar-width: thin;\n      padding-left: 5ch;\n    }\n\n    .fancy {\n      color: inherit;\n      z-index: 0;\n      scrollbar-color: transparent;\n      scrollbar-width: none;\n    }\n\n    .fancy-content {\n      counter-reset: line;\n    }\n\n    .fancy-content span {\n      position: relative;\n      display: block;\n      line-height: inherit;\n      counter-increment: line;\n      padding-left: 5ch;\n    }\n\n    .fancy-content span:before {\n      position: absolute;\n      left: 0;\n      content: counter(line);\n      font-size: 9pt;\n      color: #b9b9b9;\n    }\n\n    .editorslot {\n      color: transparent;\n    }\n  `;\n}\n\nexport { TextEditorComponent };\n"]}